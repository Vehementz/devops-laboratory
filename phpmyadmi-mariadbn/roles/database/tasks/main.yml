---
# Tasks folder

- name: Load OS-specific vars
  ansible.builtin.include_vars: "{{ lookup('first_found', params) }}"
  vars:
    params:
      files:
        - "{{ ansible_distribution }}.yml"
        - "{{ ansible_os_family }}.yml"
      paths:
        - "vars"

- name: Include task setup_debian.yml
  ansible.builtin.import_tasks: setup_debian.yml
  when: ansible_os_family == "Debian"

- name: Include task setup_redhat.yml
  ansible.builtin.import_tasks: setup_redhat.yml
  when: ansible_os_family == "RedHat"

- name: Include task setup_alpine.yml
  ansible.builtin.import_tasks: setup_alpine.yml
  when: ansible_os_family == "Alpine"

- name: Include task configure.yml
  ansible.builtin.import_tasks: configure.yml

- name: Include task databases.yml
  ansible.builtin.import_tasks: databases.yml
  when:
    - mariadb_databases is defined
    - mariadb_replication_role != "replica"

- name: Include task users.yml
  ansible.builtin.import_tasks: users.yml
  when:
    - mariadb_users is defined
    - mariadb_replication_role != "replica"

- name: Include task replication_primary.yml
  ansible.builtin.import_tasks: replication_primary.yml
  when: mariadb_replication_role == "primary"

- name: Include task replication_replica.yml
  ansible.builtin.import_tasks: replication_replica.yml
  when:
    - not ansible_check_mode
    - mariadb_replication_role == "replica"

- name: Include task backup.yml
  ansible.builtin.import_tasks: backup.yml
  when: mariadb_backup_db



#### Old mariadb tasks
# Installation des paquets mariadb serveur et son extension Python
# - name: "mariadb-server installation"
#   apt:
#     name: "mariadb-server,python3-mysqldb"
#     state: "present"


# - import_tasks: install-from-mariadb-repos.yml
#   when: install_mariadb_repos | bool

# # I have seen other roles using either python3-pymysql or python3-mysqldb package
# # python3-pymysql - pure-Python MySQL driver - Python 3.x
# # python3-mysqldb - Python interface to MySQL
# # since all hosts in this playbook are expected to use Python 3, I think python3-pymysql should be preferred
# - name: Determine required MariaDB Python libraries
#   set_fact:
#     mariadb_python_package: "{% if 'python3' in ansible_python_interpreter|default('') %}python3-pymysql{% else %}python-pymysql{% endif %}"

# - name: Ensure MariaDB Python libraries are installed
#   ansible.builtin.apt:
#     name: "{{ mariadb_python_package }}"
#     state: present

# - name: Install MariaDB packages
#   ansible.builtin.apt:
#     name:
#       - mariadb-common
#       - mariadb-server
#       - mariadb-client    # the mariadb-client package also provides mysqldump
#       # - automysqlbackup # daily, weekly and monthly backup for your MySQL database
#       # - mydumper        # 3rd-party high-performance logical SQL backup tool (improves on mysqldump)
#       # - mariadb-backup  # installs mariabackup, a non-blocking hot physical MariaDB backup tool
#     update_cache: true
#     state: present